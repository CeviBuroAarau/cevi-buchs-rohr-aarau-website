name: Deploy on Prod

on:
  workflow_dispatch:
    inputs:
      dry-run:
        description: 'Dry Run'
        required: false
        default: false

jobs:      
  build_and_test:
    name: "Build and Test"
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: 14.x

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2.1.4
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: "Install Dependencies"
      run: yarn --frozen-lockfile

    - name: "Build"
      run: yarn run build
      
    - name: Archive dist
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: |
          dist
          !dist/report.html
          
    - name: Archive webpack report
      uses: actions/upload-artifact@v2
      with:
        name: webpack report
        path: dist/report.html

    - name: "Unit Tests"
      run: yarn test:unit
      
    - name: Archive unit test report
      uses: actions/upload-artifact@v2
      with:
        name: unit test coverage report
        path: coverage

  deploy:
    name: "Deploy to Cyon"
    needs: build_and_test
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: "https://www.cevi-buro-aarau.ch/"
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: dist
      - name: FTP-Deploy-Action
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          server: ${{ secrets.FTP_SERVER }}
          port: 21
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ftps
          local-dir: ./
          server-dir: ./
          dry-run: ${{ github.event.inputs.dry-run }}
          security: loose
