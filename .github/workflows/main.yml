name: Main

on:
  push:
  pull_request:
  schedule:
    - cron: '0 20 1 * *'

jobs:
  analyze:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        
      - name: Autobuild
        uses: github/codeql-action/autobuild@v1

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
      
  build_and_test:
    name: "Build and Test"
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: 14.x

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: "Install Dependencies"
      run: yarn --frozen-lockfile

    - name: "Build"
      run: yarn run build
      
    - name: Archive dist
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: |
          dist
          !dist/report.html
          
    - name: Archive report
      uses: actions/upload-artifact@v2
      with:
        name: webpack report
        path: dist/report.html

    - name: "Unit Tests"
      run: yarn test:unit
      
    - name: Archive report
      uses: actions/upload-artifact@v2
      with:
        name: unit test coverage report
        path: coverage
      
  sonarcloud:
    runs-on: ubuntu-latest

    steps:
    - name: "Checkout"
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: 14.x

   - name: Get yarn cache directory path
     id: yarn-cache-dir-path
     run: echo "::set-output name=dir::$(yarn cache dir)"

   - uses: actions/cache@v2
     id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
     with:
       path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
       key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
       restore-keys: |
         ${{ runner.os }}-yarn-

    - name: "Install Dependencies"
      run: yarn --frozen-lockfile

    - name: "Build"
      run: yarn run test:unit

    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
  buildDockerImage:
    runs-on: ubuntu-latest
    needs: [analyze, build_and_test, sonarcloud]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Build container image
      uses: docker/build-push-action@v1
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: docker.pkg.github.com
        repository: ${{ github.repository }}/website
        tag_with_sha: true
        tag_with_ref: true
        
  cleanOldPackages:
    runs-on: ubuntu-latest
    needs: buildDockerImage
    steps:
      - uses: smartsquaregmbh/delete-old-packages@v0.2.0
        with:
          keep: 10
          names: |
            website

  deploy:
    name: "Deploy to Heroku"
    needs: buildDockerImage
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.11.10
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "cevi-buchs-rohr-aarau-webpage"
          heroku_email: "heroku@uhlme.ch"
          usedocker: true
