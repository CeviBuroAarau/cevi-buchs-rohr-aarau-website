name: Build and deploy on Azure

on:
  workflow_dispatch:
    inputs:
      dry-run:
        description: 'Dry Run'
        required: false
        default: false

jobs:
  build_and_test:
    name: "Build and Test"
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3.1.1
      with:
        node-version: 16.x

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v3
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: "Install Dependencies"
      run: yarn --frozen-lockfile

    - name: generate build number
      id: build_number
      uses: zyborg/gh-action-buildnum@v1.2.0
      with:
        gist_token: ${{ secrets.GIST_TOKEN }}

    - name: get date and revision
      id: date_and_rev
      run: |
        echo ::set-output name=revision::sha-${GITHUB_SHA::8}
        echo ::set-output name=created::$(date -u +'%d.%m.%Y %H:%M:%S')

    - name: set env variables
      run: |
        sed -i 's#VUE_APP_VERSION=Not specified#VUE_APP_VERSION=${{ steps.build_number.outputs.global_build_number }}#g' .env
        sed -i 's#VUE_APP_DATE=Not specified#VUE_APP_DATE=${{ steps.date_and_rev.outputs.created }}#g' .env
        sed -i 's#VUE_APP_REVISION=Not specified#VUE_APP_REVISION=${{ steps.date_and_rev.outputs.revision }}#g' .env
        sed -i 's#SENTRY_AUTH_TOKEN=Not specified#SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_TOKEN }}#g' .env
        sed -i 's#VUE_APP_SENTRY_ENVIRONMENT=local#VUE_APP_SENTRY_ENVIRONMENT=azure#g' .env

    - name: "Build"
      run: yarn run build

    - name: Archive dist
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: |
          dist
          !dist/report.html

    - name: Archive webpack report
      uses: actions/upload-artifact@v3
      with:
        name: webpack report
        path: dist/report.html

    - name: Archive .htaccess
      uses: actions/upload-artifact@v3
      with:
        name: .htaccess
        path: .htaccess

    - name: "Unit Tests"
      run: yarn test:unit

    - name: Archive unit test report
      uses: actions/upload-artifact@v3
      with:
        name: unit test coverage report
        path: coverage

    - name: Setup Chrome
      uses: browser-actions/setup-chrome@latest

    - name: "E2E Tests"
      run: yarn test:e2e

    - name: Archive E2E test report
      uses: actions/upload-artifact@v3
      with:
        name: e2e test report
        path: tests/e2e/reports

  release:
    name: "Create a release"
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - name: get existing build number
        uses: zyborg/gh-action-buildnum@v1.2.0
        id: lastBuildNum
        with:
          gist_token: ${{ secrets.GIST_TOKEN }}
          skip_bump: true

      - name: Checkout
        uses: actions/checkout@v3

      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v3.0.0
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.lastBuildNum.outputs.global_build_number }}
          release_name: Release v${{ steps.lastBuildNum.outputs.global_build_number }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Download dist
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Zip dist
        run: |
          (cd dist && zip -r ../dist.zip .)

      - name: Download unit test report
        uses: actions/download-artifact@v3
        with:
          name: unit test coverage report
          path: coverage

      - name: Zip coverage report
        run: |
          (cd coverage && zip -r ../unit_test_coverage_report.zip .)

      - name: Download E2E test report
        uses: actions/download-artifact@v3
        with:
          name: e2e test report
          path: tests/e2e/reports

      - name: Zip E2E test report
        run: |
          (cd tests/e2e/reports && zip -r ../../../e2e_report.zip .)

      - name: Upload Dist Archive
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist.zip
          asset_name: dist.zip
          asset_content_type: application/zip

      - name: Upload Unit Test Report
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./unit_test_coverage_report.zip
          asset_name: unit_test_coverage_report.zip
          asset_content_type: application/zip

      - name: Upload E2E Test Report
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./e2e_report.zip
          asset_name: e2e_report.zip
          asset_content_type: application/zip

  deploy:
    name: "Deploy to Azure"
    needs: release
    runs-on: ubuntu-latest
    environment:
      name: azure
      url: "https://website.cevi-buro-aarau.ch/"
    steps:
      - name: Download dist
        uses: actions/download-artifact@v3
        with:
          name: dist

      - name: Download .htaccess
        uses: actions/download-artifact@v3
        with:
          name: .htaccess

      - name: deploy file
        uses: wlixcc/SFTP-Deploy-Action@v1.0
        with:
          username: 'ceviftp'
          server: ${{ secrets.SFTP_SERVER }}
          ssh_private_key: ${{ secrets.SFTP_PRIVATE_KEY }}
          local_path: './*'
          remote_path: '/website'
          args: '-o ConnectTimeout=5'
          sftp_only: true
